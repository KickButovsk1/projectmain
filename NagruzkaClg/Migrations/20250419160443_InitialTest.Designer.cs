// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NagruzkaClg.Model.Entities;

#nullable disable

namespace NagruzkaClg.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250419160443_InitialTest")]
    partial class InitialTest
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NagruzkaClg.Model.Entities.Courses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.Disciplines", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.FreeOrSpend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FreeSpend")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FreeOrSpend");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.Groups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("FreeOrSpendId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ObuchenieFormId")
                        .HasColumnType("int");

                    b.Property<int>("SpecializeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("FreeOrSpendId");

                    b.HasIndex("ObuchenieFormId");

                    b.HasIndex("SpecializeId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.Load", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LoadsHours")
                        .HasColumnType("int");

                    b.Property<int>("NagruzkaId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NagruzkaId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Load");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.Nagruzka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("GroupId");

                    b.HasIndex("PlanId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Nagruzka");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.ObuchenieForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Form")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ObuchenieForm");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KursHours")
                        .HasColumnType("int");

                    b.Property<int>("PracticeHours")
                        .HasColumnType("int");

                    b.Property<int>("SelfHours")
                        .HasColumnType("int");

                    b.Property<int>("Semestr")
                        .HasColumnType("int");

                    b.Property<int>("SpecializeId")
                        .HasColumnType("int");

                    b.Property<int>("TeoryHours")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpecializeId");

                    b.ToTable("Plan");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.Specialize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specializes");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.Teachers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.Groups", b =>
                {
                    b.HasOne("NagruzkaClg.Model.Entities.Courses", "Course")
                        .WithMany("Groups")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("NagruzkaClg.Model.Entities.FreeOrSpend", "FreeOrSpend")
                        .WithMany("Groups")
                        .HasForeignKey("FreeOrSpendId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("NagruzkaClg.Model.Entities.ObuchenieForm", "ObuchenieForm")
                        .WithMany("Groups")
                        .HasForeignKey("ObuchenieFormId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("NagruzkaClg.Model.Entities.Specialize", "Specialize")
                        .WithMany("Groups")
                        .HasForeignKey("SpecializeId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("FreeOrSpend");

                    b.Navigation("ObuchenieForm");

                    b.Navigation("Specialize");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.Load", b =>
                {
                    b.HasOne("NagruzkaClg.Model.Entities.Nagruzka", "Nagruzka")
                        .WithMany("Loads")
                        .HasForeignKey("NagruzkaId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("NagruzkaClg.Model.Entities.Teachers", "Teacher")
                        .WithMany("Loads")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Nagruzka");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.Nagruzka", b =>
                {
                    b.HasOne("NagruzkaClg.Model.Entities.Disciplines", "Discipline")
                        .WithMany("Nagruzki")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("NagruzkaClg.Model.Entities.Groups", "Group")
                        .WithMany("Nagruzka")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("NagruzkaClg.Model.Entities.Plan", "Plan")
                        .WithMany("Nagruzki")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("NagruzkaClg.Model.Entities.Teachers", "Teacher")
                        .WithMany("Nagruzki")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Group");

                    b.Navigation("Plan");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.Plan", b =>
                {
                    b.HasOne("NagruzkaClg.Model.Entities.Specialize", "Specialize")
                        .WithMany("Plans")
                        .HasForeignKey("SpecializeId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Specialize");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.Courses", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.Disciplines", b =>
                {
                    b.Navigation("Nagruzki");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.FreeOrSpend", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.Groups", b =>
                {
                    b.Navigation("Nagruzka");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.Nagruzka", b =>
                {
                    b.Navigation("Loads");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.ObuchenieForm", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.Plan", b =>
                {
                    b.Navigation("Nagruzki");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.Specialize", b =>
                {
                    b.Navigation("Groups");

                    b.Navigation("Plans");
                });

            modelBuilder.Entity("NagruzkaClg.Model.Entities.Teachers", b =>
                {
                    b.Navigation("Loads");

                    b.Navigation("Nagruzki");
                });
#pragma warning restore 612, 618
        }
    }
}
